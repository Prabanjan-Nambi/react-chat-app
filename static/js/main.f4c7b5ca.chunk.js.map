{"version":3,"sources":["image/prabanjan.jpg","pages/Home.js","services/firebase.js","pages/Chat.js","pages/Signup.js","helpers/auth.js","pages/Login.js","routers/privateRoute.js","routers/publicRoute.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","firebase","initializeApp","apiKey","authDomain","databaseURL","auth","db","database","Chat","state","user","currentUser","chats","content","readError","writeError","handleChange","bind","handleSubmit","className","this","map","chat","timestamp","onSubmit","onChange","value","error","type","email","event","setState","target","ref","on","snapshot","forEach","snap","push","val","message","preventDefault","Date","now","uid","Component","SignUp","password","name","createUserWithEmailAndPassword","to","placeholder","Login","signInWithEmailAndPassword","autoComplete","PrivateRoute","component","authenticated","rest","render","pathname","from","location","PublicRoute","App","loading","onAuthStateChanged","exact","path","Signup","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4c7b5ca.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/prabanjan.470a2a11.jpg\";","export default function Home(props){\r\n    return (<h1>Hello</h1>);\r\n}","import firebase from 'firebase';\r\nconst config = {\r\n    apiKey: \"AIzaSyB0loSM8cgnyl4FP2vLJedoIKtNdagEvQs\",\r\n    authDomain: \"kloudchat-31a87.firebaseapp.com\",\r\n    databaseURL: \"https://kloudchat-31a87.firebaseio.com\"\r\n  };\r\n  firebase.initializeApp(config);\r\n  export const auth = firebase.auth;\r\n  export const db = firebase.database();","import React, { Component } from \"react\";\r\nimport { auth } from \"../services/firebase\";\r\nimport { db } from \"../services/firebase\";\r\n\r\nexport default class Chat extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        user: auth().currentUser,\r\n        chats: [],\r\n        content: '',\r\n        readError: null,\r\n        writeError: null\r\n      };\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n              <div className=\"chats\">\r\n                {this.state.chats.map(chat => {\r\n                  return <p key={chat.timestamp}>{chat.content}</p>\r\n                })}\r\n              </div>\r\n              <form onSubmit={this.handleSubmit}>\r\n                <input onChange={this.handleChange} value={this.state.content}></input>\r\n                {this.state.error ? <p>{this.state.writeError}</p> : null}\r\n                <button type=\"submit\">Send</button>\r\n              </form>\r\n              <div>\r\n                Login in as: <strong>{this.state.user.email}</strong>\r\n              </div>\r\n            </div>\r\n          );\r\n    }\r\n    \r\n    handleChange(event) {\r\n        this.setState({\r\n          content: event.target.value\r\n        });\r\n    }\r\n    \r\n    async componentDidMount() {\r\n      this.setState({ readError: null });\r\n      try {\r\n        db.ref(\"chats\").on(\"value\", snapshot => {\r\n          let chats = [];\r\n          snapshot.forEach((snap) => {\r\n            chats.push(snap.val());\r\n          });\r\n          this.setState({ chats });\r\n        });\r\n      } catch (error) {\r\n        this.setState({ readError: error.message });\r\n      }\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.setState({ writeError: null });\r\n        try {\r\n          await db.ref(\"chats\").push({\r\n            content: this.state.content,\r\n            timestamp: Date.now(),\r\n            uid: this.state.user.uid\r\n          });\r\n          this.setState({ content: '' });\r\n        } catch (error) {\r\n          this.setState({ writeError: error.message });\r\n        }\r\n    }\r\n  }","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { signup } from '../helpers/auth';\r\n\r\nexport default class SignUp extends Component {\r\n  \r\n   constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            email: '',\r\n            password: '',\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n   }\r\n\r\n   handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n   }\r\n\r\n   async handleSubmit(event) {\r\n     event.preventDefault();\r\n     this.setState({ error: '' });\r\n     try {\r\n       await signup(this.state.email, this.state.password);\r\n     } catch (error) {\r\n       this.setState({ error: error.message });\r\n     }\r\n   }\r\n   \r\n   render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <h1>\r\n            Sign Up to\r\n          <Link to=\"/\">KloudChat</Link>\r\n          </h1>\r\n          <p>Fill in the form below to create an account.</p>\r\n          <div>\r\n            <input placeholder=\"Email\" name=\"email\" type=\"email\" onChange={this.handleChange} value={this.state.email}></input>\r\n          </div>\r\n          <div>\r\n            <input placeholder=\"Password\" name=\"password\" onChange={this.handleChange} value={this.state.password} type=\"password\"></input>\r\n          </div>\r\n          <div>\r\n            {this.state.error ? <p>{this.state.error}</p> : null}\r\n            <button type=\"submit\">Sign up</button>\r\n          </div>\r\n          <hr></hr>\r\n          <p>Already have an account? <Link to=\"/login\">Login</Link></p>\r\n        </form>\r\n      </div>\r\n    )\r\n   }\r\n}","import { auth } from \"../services/firebase\";\r\nexport function signup(email, password) {\r\n    return auth().createUserWithEmailAndPassword(email, password);\r\n}\r\nexport function signin(email, password) {\r\n    return auth().signInWithEmailAndPassword(email, password);\r\n}","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signin } from \"../helpers/auth\";\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      email: \"\",\r\n      password: \"\"\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.setState({ error: \"\" });\r\n    try {\r\n      await signin(this.state.email, this.state.password);\r\n    } catch (error) {\r\n      this.setState({ error: error.message });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form\r\n          autoComplete=\"off\"\r\n          onSubmit={this.handleSubmit}\r\n        >\r\n          <h1>\r\n            Login to\r\n            <Link to=\"/\">\r\n              KloudChat\r\n            </Link>\r\n          </h1>\r\n          <p>\r\n            Fill in the form below to login to your account.\r\n          </p>\r\n          <div>\r\n            <input\r\n              placeholder=\"Email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              onChange={this.handleChange}\r\n              value={this.state.email}\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              onChange={this.handleChange}\r\n              value={this.state.password}\r\n              type=\"password\"\r\n            />\r\n          </div>\r\n          <div>\r\n            {this.state.error ? (\r\n              <p>{this.state.error}</p>\r\n            ) : null}\r\n            <button type=\"submit\">Login</button>\r\n          </div>\r\n          <hr />\r\n          <p>\r\n            Don't have an account? <Link to=\"/signup\">Sign up</Link>\r\n          </p>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { Redirect, Route, useLocation } from \"react-router-dom\";\r\n\r\nexport function PrivateRoute({ component: Component, authenticated, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) => authenticated === true\r\n          ? <Component {...props} />\r\n          : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />}\r\n      />\r\n    )\r\n};\r\n","import React from \"react\";\r\nimport { Redirect, Route, useLocation } from \"react-router-dom\";\r\n\r\nexport function PublicRoute({ component: Component, authenticated, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) => authenticated === false\r\n          ? <Component {...props} />\r\n          : <Redirect to='/chat' />}\r\n      />\r\n    )\r\n}\r\n\r\nexport default PublicRoute;","import './App.css';\nimport profileImage from './image/prabanjan.jpg';\nimport React, { Component } from 'react';\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport Home from './pages/Home';\nimport Chat from './pages/Chat';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport { auth } from './services/firebase';\nimport { PrivateRoute } from './routers/privateRoute';\nimport { PublicRoute } from './routers/publicRoute';\n\nclass  App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authenticated: false,\n      loading: true,\n    };\n  }\n  \n  componentDidMount() {\n    auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({\n          authenticated: true,\n          loading: false,\n        });\n      } else {\n        this.setState({\n          authenticated: false,\n          loading: false,\n        });\n      }\n    })\n  }\n\n  render() {\n    return this.state.loading === true ? <h2>Loading...</h2> : (\n\n        <Switch>\n          <Route exact path=\"/\" component={Home}></Route>\n          <PrivateRoute exact path=\"/chat\" authenticated={this.state.authenticated} component={Chat}></PrivateRoute>\n          <PublicRoute exact path=\"/signup\" authenticated={this.state.authenticated} component={Signup}></PublicRoute>\n          <PublicRoute exact path=\"/login\" authenticated={this.state.authenticated} component={Login}></PublicRoute>\n        </Switch>\n\n    ); \n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n   <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}